/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.ControladorFrameApplication;
import controlador.EnumLabels;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import modelo.AnalyzeSyntactic;

/**
 *
 * @author duran
 */
public class FrameApplication extends javax.swing.JFrame {

    /**
     * Creates new form NewApplication
     */
    private ControladorFrameApplication cfa;

    public FrameApplication() {
        initComponents();
        this.setLocationRelativeTo(this);
        this.cfa = new ControladorFrameApplication();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooserSave = new javax.swing.JFileChooser();
        fileChooserOpen = new javax.swing.JFileChooser();
        DialogExample = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        panelGeneral = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaIn = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaOut = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        menuBar = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        menuEjecucion = new javax.swing.JMenu();
        compileMenuItem = new javax.swing.JMenuItem();
        exampleMenuItem = new javax.swing.JMenuItem();

        fileChooserSave.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        fileChooserSave.setApproveButtonText("Guardar");
        fileChooserSave.setCurrentDirectory(new java.io.File("/home/duran/NetBeansProjects/JSE_Compiler"));
        fileChooserSave.setFileFilter(new MyFilter());

        fileChooserOpen.setApproveButtonText("Abrir"
        );
        fileChooserOpen.setCurrentDirectory(new java.io.File("/home/duran/NetBeansProjects/JSE_Compiler"));
        fileChooserOpen.setDialogTitle("Abri archivo");
        fileChooserOpen.setFileFilter(new MyFilter());

        DialogExample.setTitle("Example");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("program: Program // definicion nombre del programa.\ndata_type\n  // Definicion de parametros\nbegin\n  // Logica completa del programa\nend");
        jScrollPane4.setViewportView(jTextArea2);

        DialogExample.setLocationRelativeTo(this);
        DialogExample.setSize(485, 170);

        javax.swing.GroupLayout DialogExampleLayout = new javax.swing.GroupLayout(DialogExample.getContentPane());
        DialogExample.getContentPane().setLayout(DialogExampleLayout);
        DialogExampleLayout.setHorizontalGroup(
            DialogExampleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogExampleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DialogExampleLayout.setVerticalGroup(
            DialogExampleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DialogExampleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("[Documento sin titulo]");

        textAreaIn.setColumns(5);
        textAreaIn.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        textAreaIn.setRows(5);
        jScrollPane1.setViewportView(textAreaIn);

        textAreaOut.setEditable(false);
        textAreaOut.setColumns(20);
        textAreaOut.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        textAreaOut.setRows(5);
        jScrollPane2.setViewportView(textAreaOut);

        javax.swing.GroupLayout panelGeneralLayout = new javax.swing.GroupLayout(panelGeneral);
        panelGeneral.setLayout(panelGeneralLayout);
        panelGeneralLayout.setHorizontalGroup(
            panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)))
        );
        panelGeneralLayout.setVerticalGroup(
            panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        menuArchivo.setMnemonic('f');
        menuArchivo.setText("File");

        newMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newMenuItem.setText("Nuevo");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        menuArchivo.add(newMenuItem);

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        menuArchivo.add(openMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        menuArchivo.add(saveMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        menuArchivo.add(exitMenuItem);

        menuBar.add(menuArchivo);

        menuEjecucion.setText("Ejecucion");

        compileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        compileMenuItem.setText("Analizar");
        compileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileMenuItemActionPerformed(evt);
            }
        });
        menuEjecucion.add(compileMenuItem);

        exampleMenuItem.setText("Ejemplo");
        exampleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exampleMenuItemActionPerformed(evt);
            }
        });
        menuEjecucion.add(exampleMenuItem);

        menuBar.add(menuEjecucion);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveFile_fileChosser(boolean onlySave) {
        String string = textAreaIn.getText();
        if (cfa.existFileUsed()) {
            try {
                if (ControladorFrameApplication.getFile().exists()) {
                    BufferedWriter bf = new BufferedWriter(new FileWriter(ControladorFrameApplication.getFile()));
                    bf.append(string);
                    bf.close();
                } else {
                    throw new Exception(EnumLabels.ERROR_ARCHIVO_NO_EXISTE.getString());
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        } else {
            int value = fileChooserSave.showSaveDialog(this);
            if (JFileChooser.APPROVE_OPTION == value) {
                File selectedFile = fileChooserSave.getSelectedFile();
                try {
                    File file = new File(selectedFile.getName() + ".txt");
                    if (file.exists()) {
                        JOptionPane.showMessageDialog(rootPane, EnumLabels.ERROR_CREANDO_ARCHIVO_YA_EXISTENTE.getString());
                        saveFile_fileChosser(true);
                    } else {

                        BufferedWriter bf = new BufferedWriter(new FileWriter(file));
                        bf.append(string);
                        bf.close();
                        if (!onlySave) {
                            this.setTitle(selectedFile.getName());
                            textAreaIn.read(new FileReader(file), null);
                            ControladorFrameApplication.setFile(file);
                        } else {
                            textAreaIn.setText("");
                        }
                    }

                } catch (IOException e) {
                    System.out.println(e);
                    textAreaOut.setText(EnumLabels.ERROR_LECTURA_ARCHIVO.getString());
                }
            }
        }

    }

    static class MyFilter extends FileFilter {

        @Override
        public boolean accept(File file) {
            return file.isDirectory() || file.getAbsolutePath().endsWith(".txt") || file.getAbsolutePath().endsWith(".aa");
        }

        @Override
        public String getDescription() {
            return "Text documents (*.txt)";
        }

    }

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed

        if (cfa.existFileUsed()) {
            //Custom button text
            Object[] options = {"Yes",
                "No"};
            int option = JOptionPane.showOptionDialog(this,
                    "Desea Guardar antes de continuar con la siguiente accion?",
                    "Antes de...",
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]);
            if (option == JOptionPane.OK_OPTION) {
                saveFile_fileChosser(true);
            }
        } else {
            if (!textAreaIn.getText().isEmpty()) {
                saveFile_fileChosser(false);
            }
        }

        int value = fileChooserOpen.showOpenDialog(this);
        if (JFileChooser.APPROVE_OPTION == value) {
            File selectedFile = fileChooserOpen.getSelectedFile();
            try {
                textAreaIn.read(new FileReader(selectedFile), null);
                ControladorFrameApplication.setFile(selectedFile);
                setTitle(ControladorFrameApplication.getFile().getName());
            } catch (IOException e) {
                System.out.println(e);
                textAreaOut.setText(EnumLabels.ERROR_LECTURA_ARCHIVO.getString());
            }
        }

    }//GEN-LAST:event_openMenuItemActionPerformed

    private void compileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compileMenuItemActionPerformed
        if (cfa.existFileUsed()) {
            AnalyzeSyntactic as = new AnalyzeSyntactic(ControladorFrameApplication.getFile().getName());
            boolean b = as.analyzeText();
            textAreaOut.setText("");
            if (!b) {
                textAreaOut.setText(EnumLabels.INFO_COMPILE_FAILURE.getString() + "\n");
                textAreaOut.setForeground(Color.red);
                for (String s : as.getStackError()) {
                    textAreaOut.append(s + "\n");
                }
                as.clearAnalyze();
            } else {
                try {
                    textAreaOut.setForeground(Color.DARK_GRAY);
                    textAreaOut.append(EnumLabels.INFO_NUMERO_LINEAS.getString() + as.getNumberlines() + "\n");
                    textAreaOut.append(EnumLabels.INFO_NUMERO_PALABRAS_RESERVADA.getString() + as.getSetWordsReserve() + "\n");
                    textAreaOut.append(EnumLabels.INFO_NUMERO_PALABRAS_IDENTIFICADORES.getString() + as.getMap().keySet() + "\n");
                    textAreaOut.append(EnumLabels.INFO_NUMERO_PALABRAS_TIPODATO.getString() + as.getMap().values() + "\n");
                    textAreaOut.append(EnumLabels.INFO_NUMERO_PALABRAS_OPERADORES.getString() + as.getSetWordsOperators() + "\n");
                    textAreaOut.append(EnumLabels.INFO_COMPILE_SUCCESSFUL.getString() + "\n");
                    textAreaIn.read(as.ReformatFile(ControladorFrameApplication.getFile()), null);
                    saveFile_fileChosser(true);
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            }
        }
    }//GEN-LAST:event_compileMenuItemActionPerformed

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
        if (!cfa.existFileUsed()) {
            if (!textAreaIn.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, EnumLabels.INFO_GUARDAR_ARCHIVO_ACTUAL.getString());
                saveFile_fileChosser(true);
            }
        } else {
            saveFile_fileChosser(true);
            textAreaIn.setText("");
            setTitle("[Documento sin titulo]");
            ControladorFrameApplication.setFile(null);
        }
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        if (!cfa.existFileUsed()) {
            saveFile_fileChosser(false);
        } else {
            saveFile_fileChosser(true);
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void exampleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exampleMenuItemActionPerformed
        DialogExample.show();
    }//GEN-LAST:event_exampleMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DialogExample;
    private javax.swing.JMenuItem compileMenuItem;
    private javax.swing.JMenuItem exampleMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JFileChooser fileChooserOpen;
    private javax.swing.JFileChooser fileChooserSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEjecucion;
    private javax.swing.JMenuItem newMenuItem;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JPanel panelGeneral;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTextArea textAreaIn;
    private javax.swing.JTextArea textAreaOut;
    // End of variables declaration//GEN-END:variables

}
