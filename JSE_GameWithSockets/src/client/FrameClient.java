/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Random;
import java.util.StringTokenizer;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author duran
 */
public class FrameClient extends javax.swing.JApplet {

    private Client client;

    /**
     * Initializes the applet FrameClient
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });

            client = new Client();
            this.setSize(536, 533);

        } catch (InterruptedException | InvocationTargetException ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFront = new javax.swing.JPanel();
        labelHostname = new javax.swing.JLabel();
        textHostname = new javax.swing.JTextField();
        labelUsername = new javax.swing.JLabel();
        textUsername = new javax.swing.JTextField();
        buttonConnect = new javax.swing.JButton();
        buttonDisconnect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableScore = new javax.swing.JTable();
        labelFooter = new javax.swing.JLabel();
        buttonPlay = new javax.swing.JButton();

        labelHostname.setText("Hostname:");

        textHostname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textHostname.setText("localhost");

        labelUsername.setText("Username:");

        textUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textUsername.setText("player1");

        buttonConnect.setText("Conectar");
        buttonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConnectActionPerformed(evt);
            }
        });

        buttonDisconnect.setText("Desconectar");
        buttonDisconnect.setEnabled(false);
        buttonDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDisconnectActionPerformed(evt);
            }
        });

        tableScore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Puntaje"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableScore);

        labelFooter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        buttonPlay.setText("Jugar");
        buttonPlay.setEnabled(false);
        buttonPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPlayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFrontLayout = new javax.swing.GroupLayout(panelFront);
        panelFront.setLayout(panelFrontLayout);
        panelFrontLayout.setHorizontalGroup(
            panelFrontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFrontLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelFrontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(labelHostname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFrontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFrontLayout.createSequentialGroup()
                        .addComponent(textHostname, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelFrontLayout.createSequentialGroup()
                        .addComponent(textUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDisconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(panelFrontLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelFrontLayout.createSequentialGroup()
                .addGroup(panelFrontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFrontLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFrontLayout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(buttonPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFrontLayout.setVerticalGroup(
            panelFrontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFrontLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(panelFrontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHostname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textHostname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonConnect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFrontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDisconnect))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPlay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addComponent(labelFooter, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFront, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelFront, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConnectActionPerformed

        String hostname = textHostname.getText();
        String username = textUsername.getText();

        if (!hostname.isEmpty()) {
            boolean connection = client.connection(hostname);
            if (connection) {
                String talk = client.talk(username);
                talk = client.talk(EnumCommand.SCORE_USERNAME.getCommmand());
                DefaultTableModel model = (DefaultTableModel) tableScore.getModel();
                StringTokenizer st;
                do {
                    talk = client.talk("");
                    if (talk.compareToIgnoreCase(EnumCommand.SCORE_USERNAME.getCommmand()) == 0) {
                        break;
                    }
                    st = new StringTokenizer(talk, "|");
                    model.addRow(new Object[]{st.nextToken(), st.nextToken()});
                } while (true);
                buttonConnect.setEnabled(false);
                buttonDisconnect.setEnabled(true);
                buttonPlay.setEnabled(true);
                textHostname.setEnabled(false);
                textUsername.setEnabled(false);
            } else {
                System.out.println("no se pudo conectar.");
            }
        }

    }//GEN-LAST:event_buttonConnectActionPerformed

    private void buttonDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDisconnectActionPerformed
        boolean close = client.disConnection();
        if (close) {
            DefaultTableModel model = (DefaultTableModel) tableScore.getModel();
            int size = model.getRowCount();
            for (int i = 0; i < size; i++) {
                model.removeRow(0);
            }
            buttonConnect.setEnabled(true);
            buttonDisconnect.setEnabled(false);
            buttonPlay.setEnabled(false);
            textHostname.setEnabled(true);
            textUsername.setEnabled(true);
        } else {

        }

    }//GEN-LAST:event_buttonDisconnectActionPerformed

    private void buttonPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPlayActionPerformed
        // AQUI ARRANCA EL JUEGO.
        ArrayList<Integer> aleatorio = random(6);
        // FINALIZADO EL JUEGO.
        String newScore = client.newScoreOfGame(aleatorio, textUsername.getText());
        DefaultTableModel model = (DefaultTableModel) tableScore.getModel();
        StringTokenizer st = new StringTokenizer(newScore, "|");
        model.addRow(new Object[]{st.nextToken(), st.nextToken()});
    }//GEN-LAST:event_buttonPlayActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonConnect;
    private javax.swing.JButton buttonDisconnect;
    private javax.swing.JButton buttonPlay;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelFooter;
    private javax.swing.JLabel labelHostname;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JPanel panelFront;
    private javax.swing.JTable tableScore;
    private javax.swing.JTextField textHostname;
    private javax.swing.JTextField textUsername;
    // End of variables declaration//GEN-END:variables

    private ArrayList<Integer> random(int i) {
        ArrayList<Integer> l = new ArrayList<>();
        while (--i != 0) {
            l.add(new Random().nextInt(500));
        }
        return l;
    }
}
